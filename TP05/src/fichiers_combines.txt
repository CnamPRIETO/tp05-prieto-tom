===== ./index.html =====
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>TP05</title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
</head>
<body>
  <app-root></app-root>
</body>
</html>


===== ./app/app.component.html =====
<app-header></app-header>
<app-catalogue></app-catalogue>
<app-footer></app-footer>

===== ./app/footer/footer.component.ts =====
import { Component } from '@angular/core';

@Component({
  selector: 'app-footer',
  standalone: true,
  imports: [],
  templateUrl: './footer.component.html',
  styleUrl: './footer.component.css'
})
export class FooterComponent {

}


===== ./app/footer/footer.component.spec.ts =====
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { FooterComponent } from './footer.component';

describe('FooterComponent', () => {
  let component: FooterComponent;
  let fixture: ComponentFixture<FooterComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [FooterComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(FooterComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


===== ./app/footer/footer.component.html =====
<footer>
    <p>&copy; 2024 - Tom corp ;)</p>
</footer>

===== ./app/api.service.ts =====
import { Injectable } from "@angular/core";
import { HttpClient } from "@angular/common/http";
import { Observable } from "rxjs";
import { Produit } from "./models/produit";
import { environment } from "../environments/environments";

@Injectable()
export class ApiService{
    constructor (private http: HttpClient) {}
    public getProduits(): Observable<Produit[]> {
        return this.http.get<Produit[]>(environment.backendProduit);
    }
}

===== ./app/app.routes.ts =====
import { Routes } from '@angular/router';

export const routes: Routes = [];


===== ./app/barre-recherche/barre-recherche.component.html =====

<div class="barreDeRecherche">
    <div>    
        <label for="FiltreRef">Rechercher par référence </label>
        <input type="text" name="FiltreRef" [(ngModel)]="FiltreRef" (input)="rechercher()" placeholder="Rechercher par référence "/>
    </div>
    <div>
        <label for="RechercherDesc">Rechercher par description</label>
        <input type="text" name="RechercherDesc" [(ngModel)]="FiltreDesc" (input)="rechercher()" placeholder="Rechercher par description "/>
    </div>
    <div>
        <label for="RechercherPrix">Rechercher avec un prix</label>
        <input type="number" name="RechercherPrix" [(ngModel)]="FiltrePrix" (input)="rechercher()" placeholder="Rechercher par prix "/>
    </div>

</div>


===== ./app/barre-recherche/barre-recherche.component.ts =====
import { Component, EventEmitter, Output } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-barre-recherche',
  standalone: true,
  imports: [FormsModule],
  templateUrl: './barre-recherche.component.html',
  styleUrl: './barre-recherche.component.css'
})
export class BarreRechercheComponent {
  FiltreRef: string = "";
  FiltreDesc: string = "";
  FiltrePrix: number | null = null;

  @Output() recherche = new EventEmitter<{ref: string, desc: string, prix: number |null}>();

  rechercher() {
    this.recherche.emit({ref: this.FiltreRef, desc: this.FiltreDesc, prix: this.FiltrePrix});
  }
}


===== ./app/barre-recherche/barre-recherche.component.spec.ts =====
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { BarreRechercheComponent } from './barre-recherche.component';

describe('BarreRechercheComponent', () => {
  let component: BarreRechercheComponent;
  let fixture: ComponentFixture<BarreRechercheComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [BarreRechercheComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(BarreRechercheComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


===== ./app/app.component.spec.ts =====
import { TestBed } from '@angular/core/testing';
import { AppComponent } from './app.component';

describe('AppComponent', () => {
  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [AppComponent],
    }).compileComponents();
  });

  it('should create the app', () => {
    const fixture = TestBed.createComponent(AppComponent);
    const app = fixture.componentInstance;
    expect(app).toBeTruthy();
  });

  it(`should have the 'TP03' title`, () => {
    const fixture = TestBed.createComponent(AppComponent);
    const app = fixture.componentInstance;
    expect(app.title).toEqual('TP03');
  });

  it('should render title', () => {
    const fixture = TestBed.createComponent(AppComponent);
    fixture.detectChanges();
    const compiled = fixture.nativeElement as HTMLElement;
    expect(compiled.querySelector('h1')?.textContent).toContain('Hello, TP03');
  });
});


===== ./app/models/produit.ts =====
export class Produit {
    ref : String = "pas de ref";
    prix : number = 0;
    desc : String = "pas de desc";
    stock : number = 0;
}

===== ./app/app.component.ts =====
import { Component } from '@angular/core';
import { RouterOutlet } from '@angular/router';
import { CatalogueComponent } from './catalogue/catalogue.component';
import { HeaderComponent } from './header/header.component';
import { FooterComponent } from './footer/footer.component';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [RouterOutlet, CatalogueComponent, HeaderComponent, FooterComponent],
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})
export class AppComponent {
  title = 'TP05';
}


===== ./app/app.config.ts =====
import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';
import { provideRouter } from '@angular/router';
import { provideHttpClient } from '@angular/common/http';
import { ApiService } from './api.service';
import { routes } from './app.routes';

export const appConfig: ApplicationConfig = {
  providers: [provideRouter(routes),provideHttpClient(),ApiService]
};


===== ./app/liste-produits/liste-produits.component.ts =====
import { Component, Input } from '@angular/core';
import { CommonModule } from '@angular/common';
import { Produit } from '../models/produit';

@Component({
  selector: 'app-liste-produits',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './liste-produits.component.html',
  styleUrl: './liste-produits.component.css'
})
export class ListeProduitsComponent {
 @Input() produits: Produit[] = [];
}


===== ./app/liste-produits/liste-produits.component.html =====
<div *ngFor="let objet of produits">
    <div class="produitInfo">
        <p>Référence : {{ objet.ref }}</p>
        <p>Description : {{ objet.desc }}</p>
        <p>Prix : {{ objet.prix }} $</p>
        <p>Stock : {{ objet.stock }}</p>
    </div>
</div>


===== ./app/liste-produits/liste-produits.component.spec.ts =====
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { ListeProduitsComponent } from './liste-produits.component';

describe('ListeProduitsComponent', () => {
  let component: ListeProduitsComponent;
  let fixture: ComponentFixture<ListeProduitsComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [ListeProduitsComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(ListeProduitsComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


===== ./app/catalogue/catalogue.component.html =====
<app-liste-produits [produits]="produitsAvecFiltre"></app-liste-produits>
<app-barre-recherche (recherche)="rechercher($event)"></app-barre-recherche>

===== ./app/catalogue/catalogue.component.ts =====
import { Component,OnInit, OnDestroy } from '@angular/core';
import { ApiService } from '../api.service';
import { Produit } from '../models/produit';
import { BarreRechercheComponent } from '../barre-recherche/barre-recherche.component';
import { ListeProduitsComponent } from '../liste-produits/liste-produits.component';
import { CommonModule } from '@angular/common';
import { Subscription } from 'rxjs';

@Component({
  selector: 'app-catalogue',
  standalone: true,
  imports: [CommonModule, BarreRechercheComponent, ListeProduitsComponent],
  templateUrl: './catalogue.component.html',
  styleUrl: './catalogue.component.css'
})
export class CatalogueComponent implements OnInit, OnDestroy {
  produits : Produit[] = [];
  produitsAvecFiltre : Produit[] = [];
  private subscription: Subscription = new Subscription();
  filtresRecherches : {ref : string, desc : string, prix : number | null} = {ref : "", desc : "", prix : null};

  constructor(private apiService: ApiService) {   }

  ngOnInit() {
      this.subscription = this.apiService.getProduits().subscribe((produits) => { //On subcribe
        this.produits = produits;
        this.appliquerLeFiltre();
      });
  }

  rechercher(Filtrenv: {ref: string, desc: string, prix: number |null}) {
    this.filtresRecherches = Filtrenv;
    this.appliquerLeFiltre();
  }

  appliquerLeFiltre() {
    this.produitsAvecFiltre = this.produits.filter(produit => {
      let correspond = true;
  
      if (this.filtresRecherches.ref) {
        correspond = correspond && produit.ref.toLowerCase().includes(this.filtresRecherches.ref.toLowerCase());
      }
  
      if (this.filtresRecherches.desc) {
        correspond = correspond && produit.desc.toLowerCase().includes(this.filtresRecherches.desc.toLowerCase());
      }
  
      if (this.filtresRecherches.prix !== null) {
        correspond = correspond && produit.prix <= this.filtresRecherches.prix;
      }
  
      return correspond;
    });
  }
  

  ngOnDestroy() {
    this.subscription.unsubscribe(); // je unsubscribe
  }


}


===== ./app/catalogue/catalogue.component.spec.ts =====
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { CatalogueComponent } from './catalogue.component';

describe('CatalogueComponent', () => {
  let component: CatalogueComponent;
  let fixture: ComponentFixture<CatalogueComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [CatalogueComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(CatalogueComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


===== ./app/header/header.component.html =====
<header>TP05 Tom PRIETO<header>


===== ./app/header/header.component.spec.ts =====
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { HeaderComponent } from './header.component';

describe('HeaderComponent', () => {
  let component: HeaderComponent;
  let fixture: ComponentFixture<HeaderComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [HeaderComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(HeaderComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


===== ./app/header/header.component.ts =====
import { Component } from '@angular/core';

@Component({
  selector: 'app-header',
  standalone: true,
  imports: [],
  templateUrl: './header.component.html',
  styleUrl: './header.component.css'
})
export class HeaderComponent {

}


===== ./main.ts =====
import { bootstrapApplication } from '@angular/platform-browser';
import { appConfig } from './app/app.config';
import { AppComponent } from './app/app.component';

bootstrapApplication(AppComponent, appConfig)
  .catch((err) => console.error(err));


===== ./environments/environments.ts =====
export const environment = {
    production: false,
    backendProduit : '/assets/mock/produit.json'
};

